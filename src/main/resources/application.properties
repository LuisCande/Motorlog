spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.hbm2ddl.import_files=import.sql
spring.datasource.initialization-mode=always
spring.datasource.continue-on-error=false
spring.datasource.platform=postgresql
spring.jpa.generate-ddl=true

# In testing or production databases, you will want to use the validate option.
spring.jpa.hibernate.ddl-auto=create-drop

# Tells Spring where to find the views and what type of file we're working with.
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# Change the last part of the URL to reflect the target database.
spring.datasource.url= jdbc:postgresql://localhost:5432/motorlog
spring.datasource.username=motorlog
spring.datasource.password=motorlog

# Avoid a bug with the PostgreSQL driver.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Avoid a bug when using a custom WithSecurityContextFactory
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#Internationalization
spring.messages.basename=messages/messages
spring.messages.encoding=UTF-8

# Enable bean overriding so that test can be run.
spring.main.allow-bean-definition-overriding=true

#Enable mapping
spring.resources.add-mappings=true

#Static content
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**

#Bigger uploads
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=30MB